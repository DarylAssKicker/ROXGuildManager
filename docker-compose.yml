services:
  # server
  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: rox-guild-server
    user: "1000:1000"
    expose:
      - "3001"
    environment:
      - NODE_ENV=production
      - PORT=3001
    volumes:
      - ./server/temp:/app/temp
      - ./server/.env.production:/app/.env
      - ./uploads/images:/app/client/public/images:z
    networks:
      - rox-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3001/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # client
  client:
    build:
      context: ./client
      dockerfile: Dockerfile
      args:
        - VITE_API_BASE_URL=${VITE_API_BASE_URL:-/api}
    container_name: rox-guild-client
    ports:
      - "18260:80"
    volumes:
      - ./client/.env.production:/app/.env.production
      - ./uploads/images:/usr/share/nginx/html/images:z
    depends_on:
      server:
        condition: service_healthy
    networks:
      - rox-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Redis
  redis:
    image: redis:7-alpine
    container_name: rox-guild-redis
    ports:
      - "6380:6379"
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD:-K9mP3xQ7nR2w}
    volumes:
      - ./redis_data:/data
    networks:
      - rox-network
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD:-K9mP3xQ7nR2w}
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD:-K9mP3xQ7nR2w}", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  rox-network:
    driver: bridge